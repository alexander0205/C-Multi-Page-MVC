@model PageWebMic.Areas.Admin.Models.articulos_contenido

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout3.cshtml";
}


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Contenido de la Pagina</h4>
            <span style="float: right;">
                <button href="@Url.Action("contenido","Home",new { @area ="media",id= (int)ViewData["padrePrincipalId"]})" class="btn btn-default mediaColorBox">
                    <span class="glyphicon glyphicon-picture" aria-hidden="true">
                    </span>
                    Media
                </button>
            </span>
            <hr />
            @Html.ValidationSummary(true)
            <div class="form-group">
                @Html.LabelFor(model => model.id_title, htmlAttributes: new { @class = "control-label col-md-2 " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.id_title, new { @class = "form-control textOutput", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.id_title)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.titulo, htmlAttributes: new { @class = "control-label col-md-2 " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.titulo, new { @class = "form-control textInput" })
                    @Html.ValidationMessageFor(model => model.titulo)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.subtitulo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.subtitulo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.subtitulo)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.contenido, new { @class = "form-control ckeditor" })
                    @Html.ValidationMessageFor(model => model.contenido)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.tags, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.tags, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.tags)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.avalible_childrens, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.avalible_childrens)
                    @Html.ValidationMessageFor(model => model.avalible_childrens)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.avalible_edit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.avalible_edit)
                    @Html.ValidationMessageFor(model => model.avalible_edit)
                </div>
            </div>
            @Html.HiddenFor(model => model.parent_id, new { @class = "form-control" })

            <div class="form-group">

                <!-- Nav tabs -->
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active">
                    <a href="#home" aria-controls="home" role="tab" data-toggle="tab">
                        <span class="glyphicon glyphicon-picture" aria-hidden="true"></span> Imagenes Seleccionadas
                         <span id="image-picker-img" class="badge">0</span></a>
                    </li>
                    <li role="presentation">
                    <a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">
                        <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> PDF Seleccionados
                        <span id="image-picker-pdf" class="badge">0</span>
                    </a>
                     </li>
                    <li role="presentation">
                        <a href="#videos" aria-controls="videos" role="tab" data-toggle="tab">
                            <span class="glyphicon glyphicon-film" aria-hidden="true"></span>  Videos Seleccionados
                            <span id="image-picker-video" class="badge">0</span>
                        </a>
                    </li>
                    <li role="presentation" >
                        <a href="#presentation" aria-controls="home" role="tab" data-toggle="tab">
                            <span class="glyphicon glyphicon-picture" aria-hidden="true"></span> Imagenes Presentacion
                        </a>
                    </li>
                </ul>

                <!-- Tab panes -->
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="home">

                  @Html.DropDownList("image", new List<SelectListItem>
             {}, new { @multiple = "multiple" , @class = "image-picker image-picker-img  show-html" })
                     <!--  <select  multiple="multiple" class="image-picker image-picker-img  show-html">
                        </select>--> 
                    </div>
                    <div role="tabpanel" class="tab-pane" id="profile">
                        @Html.DropDownList("pdf", new List<SelectListItem>
                     { }, new { @multiple = "multiple", @class = "image-picker image-picker-pdf  show-html" })
                    </div>
                    <div role="tabpanel" class="tab-pane" id="videos">
                        @Html.DropDownList("video", new List<SelectListItem>
                     { }, new { @multiple = "multiple", @class = "image-picker image-picker-video  show-html" })
                    </div>
                    <div role="tabpanel" class="tab-pane" id="presentation">
                        <div class="row">
                            <div class="col-md-2">
                                <a href="javascript:void(0)"  onclick="selectImage('image_presentation_1')"  class="thumbnail">
                                    <img  id="image_presentation_1_image"   src="@Model.image_presentation_1" alt="...">
                                </a>
                                @Html.HiddenFor(model => model.image_presentation_1, new { @class = "form-control imageSelectControl", data_image = "image_presentation_1_image"})
                            </div>
                            <div class="col-md-2">
                                <a href="javascript:void(0)" onclick="selectImage('image_presentation_2')" class="thumbnail">
                                    <img id="image_presentation_2_image"  src="@Model.image_presentation_2" alt="...">
                                </a>
                                @Html.HiddenFor(model => model.image_presentation_2, new { @class = "form-control imageSelectControl", data_image= "image_presentation_2_image"  })
                            </div>
                        </div>
                   

                    </div>

                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
<script>
    var browserUrl =  "/Scripts/ckeditor/plugins/imagebrowser/browser/browser.html?listUrl=@Url.Action("List", "files", new { area = string.Empty, id = (int)ViewData["padrePrincipalId"], type = "file" })";
    var browserUrlImages =  "/Scripts/browser/browser.html?listUrl=@Url.Action("List", "files", new { area = string.Empty, id = (int)ViewData["padrePrincipalId"], type = "image" })";
    var listUrlImageBrowser =   "@Url.Action("List", "files" ,new { area=string.Empty, id = (int)ViewData["padrePrincipalId"],type= "image" })";
  
    var filesSelectJson = @ViewBag.selectFiles;
    var filesSelectUrl  = "@ViewBag.selectFilesUrl" ;


</script>